<!-- This file contains javascript helper functions that also can use jinja -->
<script type="text/javascript">

    // Formats an assetLabel (e.g. from a tx output) to a useful unit label
    function formatAssetLabel(assetLabel, convertToSat){
        var newLabel = assetLabel;
        if (newLabel == "" || !newLabel){
            newLabel = {% if specter.is_liquid %}"LBTC"{%else%}"BTC"{%endif%} 
        }                    
        if (convertToSat) {
            if(newLabel == "LBTC"){
                newLabel = "Lsat";
            } 
            if(newLabel == "BTC"){
                newLabel = "sat";
            } 
        } 

        {% if specter.is_testnet %}
            if (!newLabel.startsWith("t")){
                newLabel = "t" + newLabel;
            }
        {%endif%}
        
        return newLabel;
    }

    // Formats the valueInBTC (e.g. from a tx output) to "formattedValue formattedAssetLabel"
    // e.g. 0.22569496 tBTC
    function formatBtcAmount(valueInBTC, assetLabel, convertToSat){
        var formattedAssetLabel = formatAssetLabel(assetLabel, convertToSat);
        var formattedValue = valueInBTC;
        if (valueInBTC) {
            value = parseFloat(valueInBTC.toFixed(8));
            // The second condition in the if clause if True if formattedAssetLabel is equal to any element of the array
            if (convertToSat && (["Lsat", "sat", "tLsat", "tsat"].indexOf(formattedAssetLabel) > -1)) {
                formattedValue = parseInt(value * 1e8)
            }
            formattedValue = `${numberWithCommas(formattedValue)}`;
        }
        else {
            formattedValue = '{{ _("Confidential") }}';        
        }
        return `${formattedValue} ${formattedAssetLabel}`;  
    }

    // Determines if an assetLabel (e.g. from a tx output) is "BTC", "LBTC", "tBTC", "tLBTC"
    function assetLabelIsBitcoin(assetLabel){
        if (!assetLabel){
            return true            
        } 
        return ([null, "", "LBTC", "BTC", "tBTC", "tLBTC"].indexOf(assetLabel) > -1)
    }

    // Calculates and formats the price as a span class="note"
    function formatPrice(valueInBTC, assetLabel, symbol, price){
        var formattedPrice = "";
        if (valueInBTC) {
            if(assetLabelIsBitcoin(assetLabel)){
                if (price && symbol) {
                    formattedPrice = `<span class="note">(${symbol}${numberWithCommas((parseFloat(price) * valueInBTC).toFixed(2))})</span>`;
                }
            }
        }
        return formattedPrice
    }



</script>
