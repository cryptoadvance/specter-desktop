<div id="bitcoin_core_info" class="hidden" style="text-align: left; max-width: 500px;">
    <h1>{{ _("Bitcoin Core Node Info") }}:</h1>
    {% if specter.chain %}
        {% if specter.info['pruned'] %}
            <p class="warning"><img src="{{ url_for('static', filename='img/info_sign.svg') }}" style="width: 20px;"/><br>{{ _("You are using a pruned node.")}}<br>{{ _("Pruned nodes may not be able to scan for old balances when importing an existing wallet.")}}<br>{{ _("It is recommended to use Specter with an unpruned node.") }}</p>
            <br>
        {% elif not specter.info['blockfilterindex'] %}
            <p class="warning"><img src="{{ url_for('static', filename='img/info_sign.svg') }}" style="width: 20px;"/><br>{{ _("Your node does not have ")}}<code>blockfilterindex</code>{{ _(" enabled.")}}<br>{{ _("Setting ")}}<code>blockfilterindex=1</code>{{ _(" in your ")}}<code>bitcoin.conf</code>{{ _(" file is recommended as it takes just a few GB of storage")}}<br>{{ _("and helps to speed-up blockchain rescanning.") }}</p>
            <br>
        {% endif %}
        table:
        {{ specter.node.rendering_table() | subrender }}

        <p id="total_supply" style="line-height: 2.5;"></p>
        <div class="row">
            <button type="button" onclick="fetchTotalSupply()" class="btn centered">
                {{ _("Run the numbers!") }}
                <tool-tip width="200px">
                    <h4 slot="title">{{ _("Calculate the total Bitcoin supply") }}</h4>
                    <span slot="paragraph">
                        {{ _("This will run Bitcoin Core's") }} <code>gettxoutsetinfo</code> {{_("command which will calculate the total amount of Bitcoin's UTXO set.") }}<br>
                        {{ _("This might take a few minutes...") }}
                    </span>
                </tool-tip>
            </button>
        </div><br>
        <script>
            let totalUserBalance = parseFloat(parseFloat("{{ specter.wallet_manager.wallets.values() | sum(attribute='fullbalance') }}").toFixed(8));
            async function fetchTotalSupply() {
                document.getElementById('total_supply').innerHTML = `{{ _("Running the numbers... (this might take a few minutes)") }}`;
                try {
                    const response = await fetch(
                        "{{ url_for('wallets_endpoint_api.txout_set_info') }}",
                        {
                            method: 'GET'
                        }
                    ).catch((err) => {
                        showError(err)
                        return
                    });
                    let result = await response.json();
                    console.log(result)
                    if (result.error) {
                        showError(result.error)
                        return
                    }
                    if (totalUserBalance==0) {
                        document.getElementById('total_supply').innerHTML = `Your wallet holds 0 BTC and so, you're effectively a precoiner! Get off zero! `
                        return
                    }
                    let userBalanceFromTotal = parseFloat((100 / (result.total_amount / totalUserBalance)).toFixed(8));
                    document.getElementById('total_supply').innerHTML = `{{ _("Bitcoin Total Supply") }}: ${result.total_amount} BTC<br>` +
                    `<span class="note" style="margin: 7px auto;">{{ _("Your wallets hold") }} ` +
                        `${totalUserBalance} BTC (~${userBalanceFromTotal.toFixed(8)}% ` +
                    `{{ _("from the total supply") }}</span>`
                } catch(e) {
                    console.log('Caught error:', e);
                    showError(e)
                    return { success: false, error: e };
                }
            }
        </script>
        {% if current_user.is_admin %}
            <div class="row">
                <a id="active-node-settings-btn" class="btn centered" href="{{ url_for('nodes_endpoint.node_settings', node_alias=specter.node.alias) }}">
                    <img src="{{ url_for('static', filename='img/gear.svg') }}" style="width: 26px; margin: 0px;" class="svg-white">
                    {{ _("Configure Bitcoin Core RPC Connection") }}
                </a>
            </div>
        {% endif %}
    {% endif %}
</div>
