{% extends "setup/setup_page.jinja" %}

{% block setup %}
    <h1><img src="{{ url_for('static', filename='img/icon.png') }}" style="width: 60px;"/> <img src="{{ url_for('static', filename='img/arrow-right.svg') }}" style="width: 60px;" class="svg-white"/>&nbsp;{{ bitcoin_svg('main', 60) }}<br>
    <br>Configure your node</h1>
    <p>QuickSync?&nbsp;&nbsp;
        <label class="switch" id="quicksync-switch">
            <input type="checkbox" name="quicksync" id="quicksync" onchange="toggleNodeTypeSelect()" checked>
            <span class="slider"></span>
        </label>&nbsp;&nbsp;
        <tool-tip title="What is QuickSync?">
            QuickSync will set up your new node from a trusted state of the blockchain.<br><br>
            This means all block validation will be skipped until the most recent block in the snapshot.<br><br>
            Later blocks will be normally validated like with a regular full node.
        </tool-tip>
    </p>
    <div class="hidden" id="select-node-type-div">
        <br>
        <h1>Select node type:</h1>
        <div class="row">
            <label style="position: relative;">
                <input type="radio" name="node-type" id="node-type-archival" class="hidden" value="archival">
                <div class="small-card radio">
                    <span style="font-size: 1.2em; font-weight: bold;">Archival Node</span><br>
                    Requires about 400GB of available storage
                </div>
            </label>
            <label style="position: relative;">
                <input type="radio" name="node-type" class="hidden" value="pruned" checked>
                <div class="small-card radio">
                    <span style="font-size: 1.2em; font-weight: bold;">Pruned Node</span><br>
                    Requires about 10GB of available storage<br><br>
                </div>
            </label>
        </div>
    </div>
    <p class="hidden warning" id="helper-text">
        Now that you have Bitcoin Core installed, your next step will be to sync with the network.<br><br>
        Specter allows you to choose between normal syncing (IBD) - which will download and validate the entire history of the blockchain, or downloading a trusted snapshot of the current state of the network.<br><br>
        This snapshot is produced and signed by Specter team - which means you will be trusting it to get the present state of the blockchain, instead of verifying the history yourself.<br><br>
        It takes about 5GB to download and will setup a fully synced pruned node for you to use.
        You can also disable the QuickSync option, and choose between setting up an archival node (which keeps the entire history) or a pruned node.<br><br>
        <b>Please note: it is recommended to use a full archival node, or if storage is a constraint, a pruned node synced from scratch. The option for QuickSync is useful for getting started quickly, but is not recommended in the long term or when using Specter with large amounts.</b>
    </p>
    <div class="row center">
        <p class="explorer-link" id="helper" onclick="toggleHelper()">Unsure? Click here for more info!</p>
        <a class="explorer-link hidden" id="support" href="https://t.me/spectersupport" target="_blank">Still need help?</a>

    </div>
    <br>
    {% if specter.only_tor  %}
    You have activated to only connect via Tor. This will significantly slow down the download-process and is not recommended.
    <br>
    {% endif %}
    <br>
    <div class="row">
        <button type="button" class="btn wizard-btn action" id="setup-bitcoind-dir-button" onclick="setupBitcoindDirectory()">Start Syncing!</button>
    </div>
{% endblock %}

{% block setup_scripts %}
    <script>
        document.addEventListener("DOMContentLoaded", function(){
            if ('{{specter.setup_status["bitcoind"]["stage_progress"]}}' != '-1') {
                document.getElementById('setup-bitcoind-dir-button').classList.add('hidden');
                startProgressCheck('bitcoind', "{{ url_for('setup_endpoint.end') }}");
            }
        });
        function toggleNodeTypeSelect() {
            let nodeTypeDiv = document.getElementById('select-node-type-div');
            if (document.getElementById('quicksync').checked) {
                nodeTypeDiv.classList.add('hidden');
            } else {
                nodeTypeDiv.classList.remove('hidden');
            }
        }

        async function setupBitcoindDirectory() {
            let url = "{{ url_for('setup_endpoint.setup_bitcoind_datadir') }}"
            var formData = new FormData();
            formData.append('csrf_token', '{{ csrf_token() }}');
            formData.append('quicksync', document.getElementById('quicksync').checked);
            formData.append('nodetype', document.getElementById('node-type-archival').checked ? 'archival' : 'pruned');
            try {
                const response = await fetch(
                    url,
                    {
                        method: 'POST',
                        body: formData
                    }
                );
                if(response.status != 200){
                    showError(await response.text());
                    return;
                }
                const jsonResponse = await response.json();
                if ("success" in jsonResponse) {
                    showNotification(jsonResponse.success);
                    document.getElementById('setup-bitcoind-dir-button').classList.add('hidden');
                    startProgressCheck('bitcoind', "{{ url_for('setup_endpoint.end') }}");
                    return;
                }
                showError(jsonResponse.error, 4000);
            }  catch(e) {
                showError("Failed to start Bitcoin Core...");
                showError(e);
            }
        }
    </script>
{% endblock %}
