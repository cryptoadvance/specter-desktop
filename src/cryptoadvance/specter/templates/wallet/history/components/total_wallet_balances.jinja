
{# 
    total_wallet_balances - Title showing the wallet total balance + amount confirmed and unconfirmed (if there is any unconfirmed amount).
    Parameters:
    - wallet: Wallet object
    - specter: Specter object
 #}
{% macro total_wallet_balances(title, amount_total, amount_confirmed, amount_unconfirmed, amount_immature, balance, rescan_progress, alias, specter) -%}
<style type="text/css">
    table {
        font-size: 0.85em;
        border: none;
        border-collapse: initial;
    } 

    th {
        text-align: left;
        font-weight: inherit;
        border-bottom: initial;
        padding:initial;
    }
    tr {
        background: initial;
    }
    th:last-child {
        text-align: right;
        padding-left:10px;
    }
</style>
    <div style="display: flex; flex-direction: column; min-width: 300px; align-items: center">
        <span style="line-height:30px; font-size: 1.1em;">{{ title }}</span>
        <div class="smaller-card">
            <table>
                <tr>
                    <th>Total amount:</th>
                    <th><span id="fullbalance_amount">{{ amount_total | btcunitamount }}</span>
                        {% if specter.unit == 'sat' %}
                            sats
                        {% else %}
                            {% if specter.is_testnet %}t{%endif%}{% if specter.is_liquid %}L{%endif%}BTC
                        {% endif %}
                        {% if specter.price_check %} 
                            <span class="note">({{ amount_total | altunit }})</span>
                        {% endif %}
                    </th> 
                </tr>                             
            {% if amount_unconfirmed > 0 or amount_immature > 0 %}
                <tr>
                    <th>Confirmed:</th>
                    <th>{{ amount_confirmed | btcunitamount }}
                        {% if specter.unit == 'sat' %}
                            sats
                        {% else %}
                            {% if specter.is_testnet %}t{%endif%}{% if specter.is_liquid %}L{%endif%}BTC
                        {% endif %}
                        {% if specter.price_check %} 
                            <span class="note">({{ amount_confirmed | altunit }})</span>
                        {% endif %}
                    </th>
                </tr>                             
                {% if amount_unconfirmed > 0 %}
                <tr>
                    <th>Unconfirmed:</th>
                    <th>{{ amount_unconfirmed | btcunitamount }}
                        {% if specter.unit == 'sat' %}
                            sats
                        {% else %}
                            {% if specter.is_testnet %}t{%endif%}{% if specter.is_liquid %}L{%endif%}BTC
                        {% endif %}
                        {% if specter.price_check %} 
                            <span class="note">({{ amount_unconfirmed | altunit }})</span>
                        {% endif %}
                    </th>
                </tr>                             
                {% endif %}
                {% if amount_immature > 0 and specter.chain == "regtest" %}
                <tr>
                    <th>Immature:
                        <tool-tip width="200px">
                            <h4 slot="title">{{ _("What are immature outputs?") }}</h4>
                            <span slot="paragraph">
                            {{ _('The UTXO of coinbase transactions (mining rewards) have the special condition that they cannot be spent for at least 100 blocks. Their amount is not included in the total balance here. You see these outputs because you are using regtest and have mined blocks.') }}
                            </span>
                        </tool-tip>
                    </th>
                    <th>{{ amount_immature | btcunitamount }} 
                        {% if specter.unit == 'sat' %}
                            sats
                        {% else %}
                            {% if specter.is_testnet %}t{%endif%}{% if specter.is_liquid %}L{%endif%}BTC
                        {% endif %}
                        {% if specter.price_check %} 
                            <span class="note" style="color: grey">({{ amount_immature | altunit }})</span>
                        {% endif %}
                    </th>
                </tr>                             
                {% endif %}
                {% elif amount_immature > 0 and specter.chain == "main" %}
                <tr>
                    <th>Immature:
                        <tool-tip width="200px">
                            <h4 slot="title">{{ _("What are immature outputs?") }}</h4>
                            <span slot="paragraph">
                            {{ _('The UTXO of coinbase transactions (mining rewards) have the special condition that they cannot be spent for at least 100 blocks. Their amount is not included in the total balance here.') }}
                            </span>
                        </tool-tip>
                    </th>
                    <th>{{ amount_immature | btcunitamount }} 
                        {% if specter.unit == 'sat' %}
                            sats
                        {% else %}
                            {% if specter.is_testnet %}t{%endif%}{% if specter.is_liquid %}L{%endif%}BTC
                        {% endif %}
                        {% if specter.price_check %} 
                            <span class="note" style="color: grey">({{ amount_immature | altunit }})</span>
                        {% endif %}
                    </th>
                </tr>                             
            {% endif %}
            </table>
        </div>
        {% if specter.is_liquid %}
        {% if balance.get("assets", {}) %}
            <div style="margin-bottom: 15px;">
                <small style="line-height:30px">Assets:<br>
                {% for asset in balance.get("assets",{}).keys() | sort %}
                    {% set balance = balance.get("assets",{}).get(asset, {}) %}
                    <div style="margin: 0 10px; display: inline-block;">
                        {{ (balance.get("trusted", 0) + balance.get("untrusted_pending", 0) + balance.get("immature", 0)) | btcamount }}
                        <asset-label data-asset="{{asset}}" data-label="{{asset | assetlabel}}" edit-mode="enabled"></asset-label>
                    </div>
                {% endfor %}
                </small>
            </div>
        {% endif %}
        {% include 'includes/overlay/liquid_assets_registry.html' %}
        <small style="line-height: 30px;">
            <button type="button" class="btn" style="margin: auto;" onclick="showPageOverlay('liquid-assets-registry')">{{ _("Show assets list") }}</button>
        </small>
        <br>
        {% endif %}
    </div>
    {% if rescan_progress or specter.utxorescanwallet == alias %}
        <span id="wallet_rescan_data" style="display: contents;">
            <h2>Rescanning blockchain: <span id="{{ alias }}_balances_wallet_rescan_percents">{{ "%.2f"|format(specter.info["utxorescan"] if specter.utxorescanwallet == alias else rescan_progress * 100) }}</span>%</h2>
            <span class="warning">
                <img src="{{ url_for('static', filename='img/info_sign.svg') }}" style="width: 20px;"/><br>
                Total balance and transactions history may show outdated data during scanning.<br>Please wait until the scanning is complete before you start using the wallet.
            </span>
        </span>
    {% endif %}
{%- endmacro %}
